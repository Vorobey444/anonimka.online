// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;
tg.expand();

// –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
let formData = {};
let currentStep = 1;
const totalSteps = 8;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    initializeTelegramWebApp();
    checkUserLocation();
    setupEventListeners();
});

function initializeTelegramWebApp() {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
    tg.setHeaderColor('#0a0a0f');
    tg.setBackgroundColor('#0a0a0f');
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    tg.MainButton.setText('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
    tg.MainButton.onClick(() => showMainMenu());
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
    tg.BackButton.onClick(() => handleBackButton());
    
    console.log('Telegram Web App initialized');
}

function setupEventListeners() {
    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
    document.querySelectorAll('.city-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            if (this.classList.contains('filter')) {
                handleCityFilter(this.dataset.city);
            } else {
                selectCity(this.dataset.city);
            }
        });
    });

    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
    document.querySelectorAll('.gender-btn').forEach(btn => {
        btn.addEventListener('click', () => selectGender(btn.dataset.gender));
    });

    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –ø–æ–∏—Å–∫–∞
    document.querySelectorAll('.target-btn').forEach(btn => {
        btn.addEventListener('click', () => selectTarget(btn.dataset.target));
    });

    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞
    document.querySelectorAll('.goal-btn').forEach(btn => {
        btn.addEventListener('click', () => selectGoal(btn.dataset.goal));
    });

    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è
    document.querySelectorAll('.body-btn').forEach(btn => {
        btn.addEventListener('click', () => selectBody(btn.dataset.body));
    });

    // –ö–∞—Å—Ç–æ–º–Ω—ã–π –≥–æ—Ä–æ–¥
    document.getElementById('customCity').addEventListener('input', function() {
        if (this.value.trim()) {
            clearCitySelection();
            formData.city = this.value.trim();
        }
    });
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ Telegram
    updateTelegramButtons(screenId);
}

function updateTelegramButtons(screenId) {
    switch(screenId) {
        case 'mainMenu':
            tg.BackButton.hide();
            tg.MainButton.hide();
            break;
        case 'createAd':
            tg.BackButton.show();
            tg.MainButton.hide();
            break;
        case 'browseAds':
            tg.BackButton.show();
            tg.MainButton.hide();
            break;
        case 'adDetails':
            tg.BackButton.show();
            tg.MainButton.hide();
            break;
    }
}

function handleBackButton() {
    const activeScreen = document.querySelector('.screen.active').id;
    
    switch(activeScreen) {
        case 'createAd':
            showMainMenu();
            break;
        case 'browseAds':
            showMainMenu();
            break;
        case 'adDetails':
            showBrowseAds();
            break;
        default:
            showMainMenu();
    }
}

function showMainMenu() {
    showScreen('mainMenu');
    resetForm();
}

function showCreateAd() {
    if (!userLocation) {
        tg.showAlert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥');
        showLocationSetup();
        return;
    }
    
    showScreen('createAd');
    currentStep = 1;
    showStep(1);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –ª–æ–∫–∞—Ü–∏—é –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    formData.country = userLocation.country;
    formData.region = userLocation.region;
    formData.city = userLocation.city;
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ª–æ–∫–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–µ
    updateFormLocationDisplay();
}

// –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–µ
function updateFormLocationDisplay() {
    if (userLocation) {
        const locationText = `${locationData[userLocation.country].flag} ${userLocation.region}, ${userLocation.city}`;
        const formLocationDisplay = document.getElementById('formLocationDisplay');
        if (formLocationDisplay) {
            formLocationDisplay.textContent = locationText;
        }
    }
}

function showBrowseAds() {
    showScreen('browseAds');
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ä–∞–∑–¥–µ–ª–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    resetFilterLocationSelection();
    loadAds();
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–≥–∞–º–∏ —Ñ–æ—Ä–º—ã
function showStep(step) {
    document.querySelectorAll('.form-step').forEach(s => s.classList.remove('active'));
    document.getElementById(`step${step}`).classList.add('active');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const submitBtn = document.getElementById('submitBtn');
    
    prevBtn.style.display = step > 1 ? 'block' : 'none';
    nextBtn.style.display = step < totalSteps ? 'block' : 'none';
    submitBtn.style.display = step === totalSteps ? 'block' : 'none';
}

function nextStep() {
    if (validateCurrentStep()) {
        if (currentStep < totalSteps) {
            currentStep++;
            showStep(currentStep);
        }
    }
}

function previousStep() {
    if (currentStep > 1) {
        currentStep--;
        showStep(currentStep);
    }
}

function validateCurrentStep() {
    switch(currentStep) {
        case 1:
            return formData.city || document.getElementById('customCity').value.trim();
        case 2:
            return formData.gender;
        case 3:
            return formData.target;
        case 4:
            return formData.goal;
        case 5:
            const ageFrom = document.getElementById('ageFrom').value;
            const ageTo = document.getElementById('ageTo').value;
            if (ageFrom && ageTo) {
                formData.ageFrom = ageFrom;
                formData.ageTo = ageTo;
                return true;
            }
            return false;
        case 6:
            const myAge = document.getElementById('myAge').value;
            if (myAge) {
                formData.myAge = myAge;
                return true;
            }
            return false;
        case 7:
            return formData.body;
        case 8:
            const adText = document.getElementById('adText').value.trim();
            if (adText) {
                formData.text = adText;
                return true;
            }
            return false;
    }
    return false;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞ (—Å—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–æ–∫–∞—Ü–∏–∏)

function selectGender(gender) {
    document.querySelectorAll('.gender-btn').forEach(btn => btn.classList.remove('selected'));
    document.querySelector(`[data-gender="${gender}"]`).classList.add('selected');
    formData.gender = gender;
}

function selectTarget(target) {
    document.querySelectorAll('.target-btn').forEach(btn => btn.classList.remove('selected'));
    document.querySelector(`[data-target="${target}"]`).classList.add('selected');
    formData.target = target;
}

function selectGoal(goal) {
    document.querySelectorAll('.goal-btn').forEach(btn => btn.classList.remove('selected'));
    document.querySelector(`[data-goal="${goal}"]`).classList.add('selected');
    formData.goal = goal;
}

function selectBody(body) {
    document.querySelectorAll('.body-btn').forEach(btn => btn.classList.remove('selected'));
    document.querySelector(`[data-body="${body}"]`).classList.add('selected');
    formData.body = body;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
async function submitAd() {
    if (!validateCurrentStep()) {
        tg.showAlert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
        return;
    }

    try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        const adData = {
            ...formData,
            userId: tg.initDataUnsafe?.user?.id || 'anonymous',
            timestamp: Date.now()
        };

        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:', adData);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É
        tg.sendData(JSON.stringify({
            action: 'createAd',
            data: adData
        }));

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
        tg.showAlert('–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!', () => {
            showMainMenu();
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è:', error);
        tg.showAlert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
async function loadAds() {
    try {
        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è —É –±–æ—Ç–∞
        tg.sendData(JSON.stringify({
            action: 'getAds'
        }));

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:', error);
    }
}

function displayAds(ads, city = null) {
    const adsList = document.getElementById('adsList');
    
    if (!ads || ads.length === 0) {
        adsList.innerHTML = `
            <div class="no-ads">
                <div class="neon-icon">üòî</div>
                <h3>–ü–æ–∫–∞ –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π</h3>
                <p>–ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–µ!</p>
            </div>
        `;
        return;
    }

    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –≥–æ—Ä–æ–¥—É –µ—Å–ª–∏ –∑–∞–¥–∞–Ω
    const filteredAds = city ? ads.filter(ad => ad.city === city) : ads;

    adsList.innerHTML = filteredAds.map((ad, index) => `
        <div class="ad-card" onclick="showAdDetails(${index})">
            <div class="ad-info">
                <div class="ad-field">
                    <span class="icon">üèô</span>
                    <span class="label">–ì–æ—Ä–æ–¥:</span>
                    <span class="value">${ad.city}</span>
                </div>
                <div class="ad-field">
                    <span class="icon">üë§</span>
                    <span class="label">–ü–æ–ª:</span>
                    <span class="value">${ad.gender}</span>
                </div>
                <div class="ad-field">
                    <span class="icon">üîç</span>
                    <span class="label">–ò—â–µ—Ç:</span>
                    <span class="value">${ad.target}</span>
                </div>
                <div class="ad-field">
                    <span class="icon">üéØ</span>
                    <span class="label">–¶–µ–ª—å:</span>
                    <span class="value">${ad.goal}</span>
                </div>
                <div class="ad-field">
                    <span class="icon">üéÇ</span>
                    <span class="label">–í–æ–∑—Ä–∞—Å—Ç:</span>
                    <span class="value">${ad.myAge} –ª–µ—Ç</span>
                </div>
            </div>
            <div class="ad-text">
                "${ad.text.substring(0, 100)}${ad.text.length > 100 ? '...' : ''}"
            </div>
        </div>
    `).join('');
}

function handleCityFilter(city) {
    // –°–±—Ä–æ—Å –≤—ã–±–æ—Ä–∞
    document.querySelectorAll('.city-btn.filter').forEach(btn => {
        btn.classList.remove('selected');
    });

    // –í—ã–±–æ—Ä –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    document.querySelector(`[data-city="${city}"].filter`).classList.add('selected');

    // –ó–∞–ø—Ä–æ—Å –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –≥–æ—Ä–æ–¥—É
    tg.sendData(JSON.stringify({
        action: 'getAdsByCity',
        city: city
    }));
}

function showAdDetails(index) {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª–µ–π –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –¥–µ—Ç–∞–ª–µ–π
    showScreen('adDetails');
}

function contactAuthor() {
    tg.showAlert('–§—É–Ω–∫—Ü–∏—è —Å–≤—è–∑–∏ —Å –∞–≤—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
}

// –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
function resetForm() {
    formData = {};
    currentStep = 1;
    
    // –°–±—Ä–æ—Å –≤—Å–µ—Ö –≤—ã–±–æ—Ä–æ–≤
    document.querySelectorAll('.selected').forEach(el => {
        el.classList.remove('selected');
    });
    
    // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π
    document.getElementById('customCity').value = '';
    document.getElementById('ageFrom').value = '';
    document.getElementById('ageTo').value = '';
    document.getElementById('myAge').value = '';
    document.getElementById('adText').value = '';
    
    showStep(1);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –±–æ—Ç–∞
tg.onEvent('web_app_data_received', function(data) {
    try {
        const response = JSON.parse(data);
        
        switch(response.action) {
            case 'adsLoaded':
                displayAds(response.ads);
                break;
            case 'cityAdsLoaded':
                displayAds(response.ads, response.city);
                break;
            case 'adCreated':
                tg.showAlert('–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!');
                showMainMenu();
                break;
            default:
                console.log('Unknown response:', response);
        }
    } catch (error) {
        console.error('Error parsing bot data:', error);
    }
});

// –î–∞–Ω–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–π
const locationData = {
    russia: {
        name: '–†–æ—Å—Å–∏—è',
        flag: 'üá∑üá∫',
        regions: {
            '–ú–æ—Å–∫–≤–∞': ['–ú–æ—Å–∫–≤–∞'],
            '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': ['–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'],
            '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ë–∞–ª–∞—à–∏—Ö–∞', '–ü–æ–¥–æ–ª—å—Å–∫', '–•–∏–º–∫–∏', '–ö–æ—Ä–æ–ª—ë–≤', '–ú—ã—Ç–∏—â–∏', '–õ—é–±–µ—Ä—Ü—ã', '–ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫', '–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å', '–ö–æ–ª–æ–º–Ω–∞', '–û–¥–∏–Ω—Ü–æ–≤–æ'],
            '–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ì–∞—Ç—á–∏–Ω–∞', '–í—ã–±–æ—Ä–≥', '–°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä', '–¢–∏—Ö–≤–∏–Ω', '–ö–∏—Ä–∏—à–∏', '–í–æ–ª—Ö–æ–≤'],
            '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ë–µ—Ä–¥—Å–∫', '–ò—Å–∫–∏—Ç–∏–º', '–ö—É–π–±—ã—à–µ–≤', '–û–±—å'],
            '–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª', '–ö–∞–º–µ–Ω—Å–∫-–£—Ä–∞–ª—å—Å–∫–∏–π', '–ü–µ—Ä–≤–æ—É—Ä–∞–ª—å—Å–∫', '–°–µ—Ä–æ–≤'],
            '–¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω': ['–ö–∞–∑–∞–Ω—å', '–ù–∞–±–µ—Ä–µ–∂–Ω—ã–µ –ß–µ–ª–Ω—ã', '–ù–∏–∂–Ω–µ–∫–∞–º—Å–∫', '–ê–ª—å–º–µ—Ç—å–µ–≤—Å–∫', '–ó–µ–ª–µ–Ω–æ–¥–æ–ª—å—Å–∫'],
            '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π': ['–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', '–°–æ—á–∏', '–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫', '–ê—Ä–º–∞–≤–∏—Ä', '–ì–µ–ª–µ–Ω–¥–∂–∏–∫'],
            '–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É', '–¢–∞–≥–∞–Ω—Ä–æ–≥', '–®–∞—Ö—Ç—ã', '–ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫', '–í–æ–ª–≥–æ–¥–æ–Ω—Å–∫'],
            '–ß–µ–ª—è–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ß–µ–ª—è–±–∏–Ω—Å–∫', '–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫', '–ó–ª–∞—Ç–æ—É—Å—Ç', '–ú–∏–∞—Å—Å', '–ö–æ–ø–µ–π—Å–∫'],
            '–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥', '–î–∑–µ—Ä–∂–∏–Ω—Å–∫', '–ê—Ä–∑–∞–º–∞—Å', '–°–∞—Ä–æ–≤', '–ë–æ—Ä'],
            '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥', '–°–æ–≤–µ—Ç—Å–∫', '–ß–µ—Ä–Ω—è—Ö–æ–≤—Å–∫', '–ë–∞–ª—Ç–∏–π—Å–∫'],
            '–ö–∞–ª—É–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ö–∞–ª—É–≥–∞', '–û–±–Ω–∏–Ω—Å–∫', '–õ—é–¥–∏–Ω–æ–≤–æ'],
            '–ö—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ö—É—Ä—Å–∫', '–ñ–µ–ª–µ–∑–Ω–æ–≥–æ—Ä—Å–∫', '–ö—É—Ä—á–∞—Ç–æ–≤'],
            '–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ö–µ–º–µ—Ä–æ–≤–æ', '–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫', '–ü—Ä–æ–∫–æ–ø—å–µ–≤—Å–∫', '–ú–µ–∂–¥—É—Ä–µ—á–µ–Ω—Å–∫'],
            '–ö–∏—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ö–∏—Ä–æ–≤', '–ö–∏—Ä–æ–≤–æ-–ß–µ–ø–µ—Ü–∫', '–í—è—Ç—Å–∫–∏–µ –ü–æ–ª—è–Ω—ã'],
            '–ö–æ—Å—Ç—Ä–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ö–æ—Å—Ç—Ä–æ–º–∞', '–ë—É–π', '–ù–µ—Ä–µ—Ö—Ç–∞']
        }
    },
    kazakhstan: {
        name: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω',
        flag: 'üá∞üáø',
        regions: {
            '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ê–ª–º–∞—Ç—ã', '–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω', '–ö–∞–ø—á–∞–≥–∞–π', '–¢–µ–∫–µ–ª–∏', '–ñ–∞—Ä–∫–µ–Ω—Ç'],
            '–ù—É—Ä-–°—É–ª—Ç–∞–Ω': ['–ù—É—Ä-–°—É–ª—Ç–∞–Ω (–ê—Å—Ç–∞–Ω–∞)'],
            '–®—ã–º–∫–µ–Ω—Ç': ['–®—ã–º–∫–µ–Ω—Ç'],
            '–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ê–∫—Ç–æ–±–µ', '–•—Ä–æ–º—Ç–∞—É', '–ê–ª–≥–∞', '–¢–µ–º–∏—Ä'],
            '–ê—Ç—ã—Ä–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ê—Ç—ã—Ä–∞—É', '–ö—É–ª—å—Å–∞—Ä—ã', '–ñ—ã–ª—ã–æ–π'],
            '–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–£—Ä–∞–ª—å—Å–∫', '–ê–∫—Å–∞–π', '–ö–∞–∑—Ç–∞–ª–æ–≤–∫–∞'],
            '–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ö–∞—Ä–∞–≥–∞–Ω–¥–∞', '–¢–µ–º–∏—Ä—Ç–∞—É', '–ñ–µ–∑–∫–∞–∑–≥–∞–Ω', '–ë–∞–ª—Ö–∞—à'],
            '–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ö–æ—Å—Ç–∞–Ω–∞–π', '–†—É–¥–Ω—ã–π', '–ñ–∏—Ç–∏–∫–∞—Ä–∞', '–õ–∏—Å–∞–∫–æ–≤—Å–∫'],
            '–ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ê–∫—Ç–∞—É', '–ñ–∞–Ω–∞–æ–∑–µ–Ω', '–ë–µ–π–Ω–µ—É'],
            '–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ü–∞–≤–ª–æ–¥–∞—Ä', '–≠–∫–∏–±–∞—Å—Ç—É–∑', '–ê–∫—Å—É'],
            '–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫', '–ë—É–ª–∞–µ–≤–æ', '–¢–∞–π—ã–Ω—à–∞'],
            '–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫', '–°–µ–º–µ–π', '–†–∏–¥–¥–µ—Ä', '–ó—ã—Ä—è–Ω–æ–≤—Å–∫'],
            '–ñ–∞–º–±—ã–ª—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–¢–∞—Ä–∞–∑', '–ñ–∞–Ω–∞—Ç–∞—Å', '–ö–∞—Ä–∞—Ç–∞—É', '–®—É'],
            '–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': ['–ö—ã–∑—ã–ª–æ—Ä–¥–∞', '–ë–∞–π–∫–æ–Ω—É—Ä', '–ê—Ä–∞–ª']
        }
    }
};

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ª–æ–∫–∞—Ü–∏–∏
let selectedCountry = null;
let selectedRegion = null;
let selectedCity = null;

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
let setupSelectedCountry = null;
let setupSelectedRegion = null;
let setupSelectedCity = null;

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let userLocation = null;

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
let filterSelectedCountry = null;
let filterSelectedRegion = null;
let filterSelectedCity = null;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function checkUserLocation() {
    // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é –∏–∑ Telegram Web App Storage
    try {
        if (tg.CloudStorage) {
            tg.CloudStorage.getItem('userLocation', function(err, value) {
                if (!err && value) {
                    userLocation = JSON.parse(value);
                    displayUserLocation();
                    showMainMenu();
                } else {
                    showLocationSetup();
                }
            });
        } else {
            // Fallback - –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage
            const savedLocation = localStorage.getItem('userLocation');
            if (savedLocation) {
                userLocation = JSON.parse(savedLocation);
                displayUserLocation();
                showMainMenu();
            } else {
                showLocationSetup();
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–æ–∫–∞—Ü–∏–∏:', error);
        showLocationSetup();
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function displayUserLocation() {
    if (userLocation) {
        const locationText = `${locationData[userLocation.country].flag} ${userLocation.region}, ${userLocation.city}`;
        const locationDisplay = document.getElementById('userLocationDisplay');
        if (locationDisplay) {
            locationDisplay.textContent = locationText;
        }
        console.log('–¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', locationText);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function saveUserLocation(country, region, city) {
    userLocation = {
        country: country,
        region: region,
        city: city,
        timestamp: Date.now()
    };
    
    try {
        if (tg.CloudStorage) {
            tg.CloudStorage.setItem('userLocation', JSON.stringify(userLocation), function(err) {
                if (!err) {
                    console.log('–õ–æ–∫–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ Telegram Cloud Storage');
                } else {
                    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Cloud Storage:', err);
                    localStorage.setItem('userLocation', JSON.stringify(userLocation));
                }
            });
        } else {
            localStorage.setItem('userLocation', JSON.stringify(userLocation));
            console.log('–õ–æ–∫–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ localStorage');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏:', error);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
function showLocationSetup() {
    showScreen('locationSetup');
    resetSetupLocation();
}

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
function saveLocationAndContinue() {
    if (setupSelectedCountry && setupSelectedRegion && setupSelectedCity) {
        saveUserLocation(setupSelectedCountry, setupSelectedRegion, setupSelectedCity);
        displayUserLocation();
        updateFormLocationDisplay();
        showMainMenu();
    } else {
        tg.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É, —Ä–µ–≥–∏–æ–Ω –∏ –≥–æ—Ä–æ–¥');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–æ–∫–∞—Ü–∏–∏
function initLocationSelector() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å—Ç—Ä–∞–Ω (—Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è)
    document.querySelectorAll('.form-country:not(.filter-country)').forEach(btn => {
        btn.addEventListener('click', function() {
            selectCountry(this.dataset.country);
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å—Ç—Ä–∞–Ω (—Ñ–∏–ª—å—Ç—Ä –ø—Ä–æ—Å–º–æ—Ç—Ä–∞)
    document.querySelectorAll('.filter-country').forEach(btn => {
        btn.addEventListener('click', function() {
            selectFilterCountry(this.dataset.country);
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
    document.querySelectorAll('.setup-country').forEach(btn => {
        btn.addEventListener('click', function() {
            selectSetupCountry(this.dataset.country);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤ –∏ –≥–æ—Ä–æ–¥–æ–≤ (—Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è)
    const regionInput = document.querySelector('.form-region-input:not(.filter-region-input)');
    const cityInput = document.querySelector('.form-city-input:not(.filter-city-input)');
    
    if (regionInput) {
        regionInput.addEventListener('input', function() {
            handleRegionInput(this.value);
        });
        
        regionInput.addEventListener('keyup', function() {
            handleRegionInput(this.value);
        });
        
        regionInput.addEventListener('focus', function() {
            if (this.value.trim()) {
                handleRegionInput(this.value);
            } else {
                showAllRegions();
            }
        });
    }
    
    if (cityInput) {
        cityInput.addEventListener('input', function() {
            handleCityInput(this.value);
        });
        
        cityInput.addEventListener('keyup', function() {
            handleCityInput(this.value);
        });
        
        cityInput.addEventListener('focus', function() {
            if (selectedRegion) {
                if (this.value.trim()) {
                    handleCityInput(this.value);
                } else {
                    showAllCities();
                }
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ —Ñ–∏–ª—å—Ç—Ä–∞
    const filterRegionInput = document.querySelector('.filter-region-input');
    const filterCityInput = document.querySelector('.filter-city-input');
    
    if (filterRegionInput) {
        filterRegionInput.addEventListener('input', function() {
            handleFilterRegionInput(this.value);
        });
        
        filterRegionInput.addEventListener('keyup', function() {
            handleFilterRegionInput(this.value);
        });
        
        filterRegionInput.addEventListener('focus', function() {
            if (this.value.trim()) {
                handleFilterRegionInput(this.value);
            } else {
                showAllFilterRegions();
            }
        });
    }
    
    if (filterCityInput) {
        filterCityInput.addEventListener('input', function() {
            handleFilterCityInput(this.value);
        });
        
        filterCityInput.addEventListener('keyup', function() {
            handleFilterCityInput(this.value);
        });
        
        filterCityInput.addEventListener('focus', function() {
            if (filterSelectedRegion) {
                if (this.value.trim()) {
                    handleFilterCityInput(this.value);
                } else {
                    showAllFilterCities();
                }
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª–µ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
    const setupRegionInput = document.querySelector('.setup-region-input');
    const setupCityInput = document.querySelector('.setup-city-input');
    
    if (setupRegionInput) {
        setupRegionInput.addEventListener('input', function() {
            handleSetupRegionInput(this.value);
        });
        
        setupRegionInput.addEventListener('keyup', function() {
            handleSetupRegionInput(this.value);
        });
        
        setupRegionInput.addEventListener('focus', function() {
            if (this.value.trim()) {
                handleSetupRegionInput(this.value);
            } else {
                showAllSetupRegions();
            }
        });
    }
    
    if (setupCityInput) {
        setupCityInput.addEventListener('input', function() {
            handleSetupCityInput(this.value);
        });
        
        setupCityInput.addEventListener('keyup', function() {
            handleSetupCityInput(this.value);
        });
        
        setupCityInput.addEventListener('focus', function() {
            if (setupSelectedRegion) {
                if (this.value.trim()) {
                    handleSetupCityInput(this.value);
                } else {
                    showAllSetupCities();
                }
            }
        });
    }
    
    // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –ª–æ–∫–∞—Ü–∏–∏ (—Ñ–æ—Ä–º–∞)
    const resetBtn = document.querySelector('.reset-form-location:not(.reset-filter-location)');
    if (resetBtn) {
        resetBtn.addEventListener('click', resetLocationSelection);
    }
    
    // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –ª–æ–∫–∞—Ü–∏–∏ (—Ñ–∏–ª—å—Ç—Ä)
    const resetFilterBtn = document.querySelector('.reset-filter-location');
    if (resetFilterBtn) {
        resetFilterBtn.addEventListener('click', resetFilterLocationSelection);
    }
    
    // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
    const resetSetupBtn = document.querySelector('.reset-setup-location');
    if (resetSetupBtn) {
        resetSetupBtn.addEventListener('click', resetSetupLocation);
    }

    // –°–∫—Ä—ã—Ç–∏–µ —Å–ø–∏—Å–∫–æ–≤ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö
    document.addEventListener('click', function(e) {
        if (!e.target.closest('.search-container')) {
            hideAllSuggestions();
        }
    });
}

// –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã
function selectCountry(countryCode) {
    selectedCountry = countryCode;
    selectedRegion = null;
    selectedCity = null;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('.form-country').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelector(`[data-country="${countryCode}"]`).classList.add('active');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    const regionSection = document.querySelector('.form-region-selection');
    regionSection.style.display = 'block';
    setTimeout(() => {
        regionSection.style.opacity = '1';
    }, 50);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
    document.querySelector('.form-city-selection').style.display = 'none';
    document.querySelector('.form-selected-location').style.display = 'none';
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.querySelector('.form-region-input').value = '';
    document.querySelector('.form-city-input').value = '';
    
    console.log('–í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∞:', locationData[countryCode].name);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–µ–≥–∏–æ–Ω–∞
function handleRegionInput(value) {
    if (!selectedCountry) return;
    
    // –ï—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ, —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    if (!value.trim()) {
        hideAllSuggestions();
        return;
    }
    
    const regions = Object.keys(locationData[selectedCountry].regions);
    const filtered = regions.filter(region => 
        region.toLowerCase().startsWith(value.toLowerCase())
    );
    
    showRegionSuggestions(filtered);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã
function showAllRegions() {
    if (!selectedCountry) return;
    
    const regions = Object.keys(locationData[selectedCountry].regions);
    showRegionSuggestions(regions);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤
function showRegionSuggestions(regions) {
    const suggestionsContainer = document.querySelector('.form-region-suggestions');
    
    if (regions.length === 0) {
        suggestionsContainer.style.display = 'none';
        suggestionsContainer.classList.remove('active');
        return;
    }
    
    suggestionsContainer.innerHTML = regions.map(region => `
        <div class="suggestion-item" onclick="selectRegion('${region}')">
            ${region}
        </div>
    `).join('');
    
    suggestionsContainer.style.display = 'block';
    suggestionsContainer.classList.add('active');
}

// –í—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞
function selectRegion(regionName) {
    selectedRegion = regionName;
    selectedCity = null;
    
    document.querySelector('.form-region-input').value = regionName;
    hideAllSuggestions();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    const citySection = document.querySelector('.form-city-selection');
    citySection.style.display = 'block';
    setTimeout(() => {
        citySection.style.opacity = '1';
    }, 50);
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≥–æ—Ä–æ–¥–∞
    document.querySelector('.form-city-input').value = '';
    document.querySelector('.form-city-input').focus();
    
    console.log('–í—ã–±—Ä–∞–Ω —Ä–µ–≥–∏–æ–Ω:', regionName);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
function handleCityInput(value) {
    if (!selectedCountry || !selectedRegion) return;
    
    // –ï—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ, —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    if (!value.trim()) {
        hideAllSuggestions();
        return;
    }
    
    const cities = locationData[selectedCountry].regions[selectedRegion];
    const filtered = cities.filter(city => 
        city.toLowerCase().startsWith(value.toLowerCase())
    );
    
    showCitySuggestions(filtered);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞
function showAllCities() {
    if (!selectedCountry || !selectedRegion) return;
    
    const cities = locationData[selectedCountry].regions[selectedRegion];
    showCitySuggestions(cities);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤
function showCitySuggestions(cities) {
    const suggestionsContainer = document.querySelector('.form-city-suggestions');
    
    if (cities.length === 0) {
        suggestionsContainer.style.display = 'none';
        suggestionsContainer.classList.remove('active');
        return;
    }
    
    suggestionsContainer.innerHTML = cities.map(city => `
        <div class="suggestion-item" onclick="selectCity('${city}')">
            ${city}
        </div>
    `).join('');
    
    suggestionsContainer.style.display = 'block';
    suggestionsContainer.classList.add('active');
}

// –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
function selectCity(cityName) {
    selectedCity = cityName;
    
    document.querySelector('.form-city-input').value = cityName;
    hideAllSuggestions();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    formData.country = selectedCountry;
    formData.region = selectedRegion;
    formData.city = cityName;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é
    showSelectedLocation();
    
    console.log('–í—ã–±—Ä–∞–Ω –≥–æ—Ä–æ–¥:', cityName);
    console.log('–ü–æ–ª–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è:', `${locationData[selectedCountry].name}, ${selectedRegion}, ${cityName}`);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é
function showSelectedLocation() {
    const selectedLocationDiv = document.querySelector('.form-selected-location');
    const locationText = document.querySelector('.form-location-text');
    
    const fullLocation = `${locationData[selectedCountry].flag} ${selectedRegion}, ${selectedCity}`;
    locationText.textContent = fullLocation;
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏–∏ –≤—ã–±–æ—Ä–∞
    document.querySelector('.form-region-selection').style.display = 'none';
    document.querySelector('.form-city-selection').style.display = 'none';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    selectedLocationDiv.style.display = 'block';
    setTimeout(() => {
        selectedLocationDiv.style.opacity = '1';
    }, 50);
}

// –°–±—Ä–æ—Å –≤—ã–±–æ—Ä–∞ –ª–æ–∫–∞—Ü–∏–∏
function resetLocationSelection() {
    selectedCountry = null;
    selectedRegion = null;
    selectedCity = null;
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    delete formData.country;
    delete formData.region;
    delete formData.city;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å—Ç—Ä–∞–Ω
    document.querySelectorAll('.form-country').forEach(btn => {
        btn.classList.remove('active');
    });
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞
    document.querySelector('.form-region-input').value = '';
    document.querySelector('.form-city-input').value = '';
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏ –∫—Ä–æ–º–µ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã
    document.querySelector('.form-region-selection').style.display = 'none';
    document.querySelector('.form-city-selection').style.display = 'none';
    document.querySelector('.form-selected-location').style.display = 'none';
    
    hideAllSuggestions();
    
    console.log('–í—ã–±–æ—Ä –ª–æ–∫–∞—Ü–∏–∏ —Å–±—Ä–æ—à–µ–Ω');
}

// –°–∫—Ä—ã—Ç—å –≤—Å–µ —Å–ø–∏—Å–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
function hideAllSuggestions() {
    document.querySelectorAll('.suggestions-list').forEach(list => {
        list.classList.remove('active');
        list.style.display = 'none';
        list.innerHTML = '';
    });
}

// –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –ª–æ–∫–∞—Ü–∏–∏
    initLocationSelector();
    
    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
    document.querySelectorAll('.gender-btn').forEach(btn => {
        btn.addEventListener('click', () => selectGender(btn.dataset.gender));
    });

    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –ø–æ–∏—Å–∫–∞
    document.querySelectorAll('.target-btn').forEach(btn => {
        btn.addEventListener('click', () => selectTarget(btn.dataset.target));
    });

    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞
    document.querySelectorAll('.goal-btn').forEach(btn => {
        btn.addEventListener('click', () => selectGoal(btn.dataset.goal));
    });

    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è
    document.querySelectorAll('.body-btn').forEach(btn => {
        btn.addEventListener('click', () => selectBody(btn.dataset.body));
    });

    // –§–∏–ª—å—Ç—Ä—ã –≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
    document.querySelectorAll('.city-btn.filter').forEach(btn => {
        btn.addEventListener('click', function() {
            handleCityFilter(this.dataset.city);
        });
    });
}

// –û–±–Ω–æ–≤–ª—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
function validateCurrentStep() {
    switch(currentStep) {
        case 1:
            // –¢–µ–ø–µ—Ä—å –ø–µ—Ä–≤—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä –ø–æ–ª–∞
            return formData.gender;
        case 2:
        case 3:
            return formData.target;
        case 4:
            return formData.goal;
        case 5:
            const ageFrom = document.getElementById('ageFrom').value;
            const ageTo = document.getElementById('ageTo').value;
            if (ageFrom && ageTo) {
                formData.ageFrom = ageFrom;
                formData.ageTo = ageTo;
                return true;
            }
            return false;
        case 6:
            const myAge = document.getElementById('myAge').value;
            if (myAge) {
                formData.myAge = myAge;
                return true;
            }
            return false;
        case 7:
            return formData.body;
        case 8:
            const adText = document.getElementById('adText').value.trim();
            if (adText) {
                formData.text = adText;
                return true;
            }
            return false;
    }
    return false;
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Å–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
function resetForm() {
    formData = {};
    currentStep = 1;
    
    // –°–±—Ä–æ—Å —Å–∏—Å—Ç–µ–º—ã –ª–æ–∫–∞—Ü–∏–∏
    resetLocationSelection();
    
    // –°–±—Ä–æ—Å –≤—Å–µ—Ö –≤—ã–±–æ—Ä–æ–≤
    document.querySelectorAll('.selected').forEach(el => {
        el.classList.remove('selected');
    });
    
    // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π
    document.getElementById('ageFrom').value = '';
    document.getElementById('ageTo').value = '';
    document.getElementById('myAge').value = '';
    document.getElementById('adText').value = '';
    
    showStep(1);
}

// === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –§–ò–õ–¨–¢–†–ê –í –ü–†–û–°–ú–û–¢–†–ï –û–ë–™–Ø–í–õ–ï–ù–ò–ô ===

// –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function selectFilterCountry(countryCode) {
    filterSelectedCountry = countryCode;
    filterSelectedRegion = null;
    filterSelectedCity = null;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('.filter-country').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelector(`[data-country="${countryCode}"].filter-country`).classList.add('active');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    const regionSection = document.querySelector('.filter-region-selection');
    regionSection.style.display = 'block';
    setTimeout(() => {
        regionSection.style.opacity = '1';
    }, 50);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
    document.querySelector('.filter-city-selection').style.display = 'none';
    document.querySelector('.filter-selected-location').style.display = 'none';
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.querySelector('.filter-region-input').value = '';
    document.querySelector('.filter-city-input').value = '';
    
    console.log('–í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞:', locationData[countryCode].name);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–µ–≥–∏–æ–Ω–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function handleFilterRegionInput(value) {
    if (!filterSelectedCountry) return;
    
    // –ï—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ, —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    if (!value.trim()) {
        hideAllSuggestions();
        return;
    }
    
    const regions = Object.keys(locationData[filterSelectedCountry].regions);
    const filtered = regions.filter(region => 
        region.toLowerCase().startsWith(value.toLowerCase())
    );
    
    showFilterRegionSuggestions(filtered);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function showAllFilterRegions() {
    if (!filterSelectedCountry) return;
    
    const regions = Object.keys(locationData[filterSelectedCountry].regions);
    showFilterRegionSuggestions(regions);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function showFilterRegionSuggestions(regions) {
    const suggestionsContainer = document.querySelector('.filter-region-suggestions');
    
    if (regions.length === 0) {
        suggestionsContainer.style.display = 'none';
        return;
    }
    
    suggestionsContainer.innerHTML = regions.map(region => `
        <div class="suggestion-item" onclick="selectFilterRegion('${region}')">
            ${region}
        </div>
    `).join('');
    
    suggestionsContainer.classList.add('active');
}

// –í—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function selectFilterRegion(regionName) {
    filterSelectedRegion = regionName;
    filterSelectedCity = null;
    
    document.querySelector('.filter-region-input').value = regionName;
    hideAllSuggestions();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    const citySection = document.querySelector('.filter-city-selection');
    citySection.style.display = 'block';
    setTimeout(() => {
        citySection.style.opacity = '1';
    }, 50);
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≥–æ—Ä–æ–¥–∞
    document.querySelector('.filter-city-input').value = '';
    document.querySelector('.filter-city-input').focus();
    
    console.log('–í—ã–±—Ä–∞–Ω —Ä–µ–≥–∏–æ–Ω –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞:', regionName);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function handleFilterCityInput(value) {
    if (!filterSelectedCountry || !filterSelectedRegion) return;
    
    // –ï—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ, —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    if (!value.trim()) {
        hideAllSuggestions();
        return;
    }
    
    const cities = locationData[filterSelectedCountry].regions[filterSelectedRegion];
    const filtered = cities.filter(city => 
        city.toLowerCase().startsWith(value.toLowerCase())
    );
    
    showFilterCitySuggestions(filtered);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function showAllFilterCities() {
    if (!filterSelectedCountry || !filterSelectedRegion) return;
    
    const cities = locationData[filterSelectedCountry].regions[filterSelectedRegion];
    showFilterCitySuggestions(cities);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function showFilterCitySuggestions(cities) {
    const suggestionsContainer = document.querySelector('.filter-city-suggestions');
    
    if (cities.length === 0) {
        suggestionsContainer.style.display = 'none';
        return;
    }
    
    suggestionsContainer.innerHTML = cities.map(city => `
        <div class="suggestion-item" onclick="selectFilterCity('${city}')">
            ${city}
        </div>
    `).join('');
    
    suggestionsContainer.classList.add('active');
}

// –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function selectFilterCity(cityName) {
    filterSelectedCity = cityName;
    
    document.querySelector('.filter-city-input').value = cityName;
    hideAllSuggestions();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é
    showFilterSelectedLocation();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏
    loadAdsByLocation(filterSelectedCountry, filterSelectedRegion, cityName);
    
    console.log('–í—ã–±—Ä–∞–Ω –≥–æ—Ä–æ–¥ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞:', cityName);
    console.log('–ü–æ–ª–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞:', `${locationData[filterSelectedCountry].name}, ${filterSelectedRegion}, ${cityName}`);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function showFilterSelectedLocation() {
    const selectedLocationDiv = document.querySelector('.filter-selected-location');
    const locationText = document.querySelector('.filter-location-text');
    
    const fullLocation = `${locationData[filterSelectedCountry].flag} ${filterSelectedRegion}, ${filterSelectedCity}`;
    locationText.textContent = fullLocation;
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏–∏ –≤—ã–±–æ—Ä–∞
    document.querySelector('.filter-region-selection').style.display = 'none';
    document.querySelector('.filter-city-selection').style.display = 'none';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    selectedLocationDiv.style.display = 'block';
    setTimeout(() => {
        selectedLocationDiv.style.opacity = '1';
    }, 50);
}

// –°–±—Ä–æ—Å –≤—ã–±–æ—Ä–∞ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
function resetFilterLocationSelection() {
    filterSelectedCountry = null;
    filterSelectedRegion = null;
    filterSelectedCity = null;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å—Ç—Ä–∞–Ω
    document.querySelectorAll('.filter-country').forEach(btn => {
        btn.classList.remove('active');
    });
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞
    document.querySelector('.filter-region-input').value = '';
    document.querySelector('.filter-city-input').value = '';
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏ –∫—Ä–æ–º–µ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã
    document.querySelector('.filter-region-selection').style.display = 'none';
    document.querySelector('.filter-city-selection').style.display = 'none';
    document.querySelector('.filter-selected-location').style.display = 'none';
    
    hideAllSuggestions();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    loadAds();
    
    console.log('–í—ã–±–æ—Ä –ª–æ–∫–∞—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞ —Å–±—Ä–æ—à–µ–Ω');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –ª–æ–∫–∞—Ü–∏–∏
function loadAdsByLocation(country, region, city) {
    try {
        tg.sendData(JSON.stringify({
            action: 'getAdsByLocation',
            country: country,
            region: region,
            city: city
        }));
        
        console.log('–ó–∞–ø—Ä–æ—Å –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –ª–æ–∫–∞—Ü–∏–∏:', {country, region, city});
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –ª–æ–∫–∞—Ü–∏–∏:', error);
    }
}

// === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ù–ê–°–¢–†–û–ô–ö–ò –õ–û–ö–ê–¶–ò–ò ===

// –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function selectSetupCountry(countryCode) {
    setupSelectedCountry = countryCode;
    setupSelectedRegion = null;
    setupSelectedCity = null;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('.setup-country').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelector(`[data-country="${countryCode}"].setup-country`).classList.add('active');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    const regionSection = document.querySelector('.setup-region-selection');
    regionSection.style.display = 'block';
    setTimeout(() => {
        regionSection.style.opacity = '1';
    }, 50);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
    document.querySelector('.setup-city-selection').style.display = 'none';
    document.querySelector('.setup-selected-location').style.display = 'none';
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.querySelector('.setup-region-input').value = '';
    document.querySelector('.setup-city-input').value = '';
    
    console.log('–í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', locationData[countryCode].name);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–µ–≥–∏–æ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function handleSetupRegionInput(value) {
    if (!setupSelectedCountry) return;
    
    if (!value.trim()) {
        hideAllSuggestions();
        return;
    }
    
    const regions = Object.keys(locationData[setupSelectedCountry].regions);
    const filtered = regions.filter(region => 
        region.toLowerCase().startsWith(value.toLowerCase())
    );
    
    showSetupRegionSuggestions(filtered);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function showAllSetupRegions() {
    if (!setupSelectedCountry) return;
    
    const regions = Object.keys(locationData[setupSelectedCountry].regions);
    showSetupRegionSuggestions(regions);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function showSetupRegionSuggestions(regions) {
    const suggestionsContainer = document.querySelector('.setup-region-suggestions');
    
    if (regions.length === 0) {
        suggestionsContainer.style.display = 'none';
        suggestionsContainer.classList.remove('active');
        return;
    }
    
    suggestionsContainer.innerHTML = regions.map(region => `
        <div class="suggestion-item" onclick="selectSetupRegion('${region}')">
            ${region}
        </div>
    `).join('');
    
    suggestionsContainer.style.display = 'block';
    suggestionsContainer.classList.add('active');
}

// –í—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function selectSetupRegion(regionName) {
    setupSelectedRegion = regionName;
    setupSelectedCity = null;
    
    document.querySelector('.setup-region-input').value = regionName;
    hideAllSuggestions();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    const citySection = document.querySelector('.setup-city-selection');
    citySection.style.display = 'block';
    setTimeout(() => {
        citySection.style.opacity = '1';
    }, 50);
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≥–æ—Ä–æ–¥–∞
    document.querySelector('.setup-city-input').value = '';
    document.querySelector('.setup-city-input').focus();
    
    console.log('–í—ã–±—Ä–∞–Ω —Ä–µ–≥–∏–æ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:', regionName);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function handleSetupCityInput(value) {
    if (!setupSelectedCountry || !setupSelectedRegion) return;
    
    if (!value.trim()) {
        hideAllSuggestions();
        return;
    }
    
    const cities = locationData[setupSelectedCountry].regions[setupSelectedRegion];
    const filtered = cities.filter(city => 
        city.toLowerCase().startsWith(value.toLowerCase())
    );
    
    showSetupCitySuggestions(filtered);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function showAllSetupCities() {
    if (!setupSelectedCountry || !setupSelectedRegion) return;
    
    const cities = locationData[setupSelectedCountry].regions[setupSelectedRegion];
    showSetupCitySuggestions(cities);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function showSetupCitySuggestions(cities) {
    const suggestionsContainer = document.querySelector('.setup-city-suggestions');
    
    if (cities.length === 0) {
        suggestionsContainer.style.display = 'none';
        suggestionsContainer.classList.remove('active');
        return;
    }
    
    suggestionsContainer.innerHTML = cities.map(city => `
        <div class="suggestion-item" onclick="selectSetupCity('${city}')">
            ${city}
        </div>
    `).join('');
    
    suggestionsContainer.style.display = 'block';
    suggestionsContainer.classList.add('active');
}

// –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function selectSetupCity(cityName) {
    setupSelectedCity = cityName;
    
    document.querySelector('.setup-city-input').value = cityName;
    hideAllSuggestions();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é
    showSetupSelectedLocation();
    
    console.log('–í—ã–±—Ä–∞–Ω –≥–æ—Ä–æ–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:', cityName);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
function showSetupSelectedLocation() {
    const selectedLocationDiv = document.querySelector('.setup-selected-location');
    const locationText = document.querySelector('.setup-location-text');
    
    const fullLocation = `${locationData[setupSelectedCountry].flag} ${setupSelectedRegion}, ${setupSelectedCity}`;
    locationText.textContent = fullLocation;
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏–∏ –≤—ã–±–æ—Ä–∞
    document.querySelector('.setup-region-selection').style.display = 'none';
    document.querySelector('.setup-city-selection').style.display = 'none';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    selectedLocationDiv.style.display = 'block';
    setTimeout(() => {
        selectedLocationDiv.style.opacity = '1';
    }, 50);
}

// –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
function resetSetupLocation() {
    setupSelectedCountry = null;
    setupSelectedRegion = null;
    setupSelectedCity = null;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å—Ç—Ä–∞–Ω
    document.querySelectorAll('.setup-country').forEach(btn => {
        btn.classList.remove('active');
    });
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞
    document.querySelector('.setup-region-input').value = '';
    document.querySelector('.setup-city-input').value = '';
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏ –∫—Ä–æ–º–µ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã
    document.querySelector('.setup-region-selection').style.display = 'none';
    document.querySelector('.setup-city-selection').style.display = 'none';
    document.querySelector('.setup-selected-location').style.display = 'none';
    
    hideAllSuggestions();
    
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞—Ü–∏–∏ —Å–±—Ä–æ—à–µ–Ω–∞');
}

// –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.debugApp = {
    formData: () => console.log(formData),
    currentStep: () => console.log(currentStep),
    tg: () => console.log(tg),
    locationData: () => console.log(locationData),
    selectedLocation: () => console.log({selectedCountry, selectedRegion, selectedCity}),
    filterLocation: () => console.log({filterSelectedCountry, filterSelectedRegion, filterSelectedCity}),
    setupLocation: () => console.log({setupSelectedCountry, setupSelectedRegion, setupSelectedCity}),
    userLocation: () => console.log(userLocation),
    clearUserLocation: () => {
        if (tg.CloudStorage) {
            tg.CloudStorage.removeItem('userLocation');
        }
        localStorage.removeItem('userLocation');
        userLocation = null;
        showLocationSetup();
    }
};