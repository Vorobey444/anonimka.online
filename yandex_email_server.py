#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π Email —Å–µ—Ä–≤–µ—Ä –¥–ª—è anonimka.online
–û—Ç–ø—Ä–∞–≤–∫–∞ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–¥—Ä–µ—Å–∞ wish.online@yandex.kz
"""

from flask import Flask, request, jsonify
from flask_cors import CORS
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.header import Header
import logging
from datetime import datetime
import os

app = Flask(__name__)
CORS(app)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Email –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SMTP_SERVER = 'smtp.yandex.ru'
SMTP_PORT = 587
SENDER_EMAIL = 'wish.online@yandex.kz'
SENDER_PASSWORD = 'aitmytqacblwvpjc'  # –ü–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
RECIPIENT_EMAIL = 'vorobey469@yandex.ru'

def send_email_via_yandex(sender_email, subject, message):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ Yandex SMTP
    """
    try:
        logger.info(f"üìß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–∏—Å—å–º–∞ –æ—Ç {sender_email}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        msg = MIMEMultipart('alternative')
        msg['From'] = Header(f'Anonimka.Online <{SENDER_EMAIL}>', 'utf-8')
        msg['To'] = Header(f'–ê–ª–µ–∫—Å–µ–π <{RECIPIENT_EMAIL}>', 'utf-8')
        msg['Subject'] = Header(subject, 'utf-8')
        msg['Reply-To'] = Header(sender_email, 'utf-8')
        
        # –°–æ–∑–¥–∞–Ω–∏–µ HTML –∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
        text_body = f"""
–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ anonimka.online

–û—Ç: {sender_email}
–¢–µ–º–∞: {subject}
–í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}

–°–æ–æ–±—â–µ–Ω–∏–µ:
{message}

---
–≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ anonimka.online
–î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥—Ä–µ—Å: {sender_email}
        """
        
        html_body = f"""
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <style>
        body {{ font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }}
        .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
        .header {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 10px 10px 0 0; }}
        .content {{ background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }}
        .message {{ background: white; padding: 20px; border-radius: 8px; border-left: 4px solid #667eea; }}
        .info {{ color: #666; font-size: 14px; margin-top: 20px; }}
        .footer {{ text-align: center; color: #999; font-size: 12px; margin-top: 30px; }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>üåü –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å anonimka.online</h2>
        </div>
        <div class="content">
            <div class="info">
                <strong>–û—Ç:</strong> {sender_email}<br>
                <strong>–¢–µ–º–∞:</strong> {subject}<br>
                <strong>–í—Ä–µ–º—è:</strong> {datetime.now().strftime('%d.%m.%Y –≤ %H:%M:%S')}<br>
            </div>
            <div class="message">
                <strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong><br><br>
                {message.replace(chr(10), '<br>')}
            </div>
            <div class="footer">
                –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ <strong>anonimka.online</strong><br>
                –î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥—Ä–µ—Å: <strong>{sender_email}</strong>
            </div>
        </div>
    </div>
</body>
</html>
        """
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è
        msg.attach(MIMEText(text_body, 'plain', 'utf-8'))
        msg.attach(MIMEText(html_body, 'html', 'utf-8'))
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É
        logger.info(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {SMTP_SERVER}:{SMTP_PORT}")
        
        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
            server.starttls()  # –í–∫–ª—é—á–µ–Ω–∏–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
            server.login(SENDER_EMAIL, SENDER_PASSWORD)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
            server.send_message(msg, from_addr=SENDER_EMAIL, to_addrs=[RECIPIENT_EMAIL])
            
        logger.info("‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ Yandex SMTP")
        return True
        
    except smtplib.SMTPAuthenticationError as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ SMTP: {e}")
        return False
    except smtplib.SMTPException as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ SMTP: {e}")
        return False
    except Exception as e:
        logger.error(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

@app.route('/send-email', methods=['POST', 'OPTIONS'])
def send_email():
    """
    Endpoint –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
    """
    if request.method == 'OPTIONS':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight –∑–∞–ø—Ä–æ—Å–∞
        response = jsonify({'status': 'ok'})
        response.headers.add('Access-Control-Allow-Origin', '*')
        response.headers.add('Access-Control-Allow-Headers', 'Content-Type')
        response.headers.add('Access-Control-Allow-Methods', 'POST')
        return response
    
    try:
        data = request.get_json()
        logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É: {data}")
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        if not data:
            return jsonify({'error': '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}), 400
            
        sender_email = data.get('senderEmail', '').strip()
        subject = data.get('subject', '–°–æ–æ–±—â–µ–Ω–∏–µ —Å anonimka.online').strip()
        message = data.get('message', '').strip()
        
        if not sender_email or not message:
            return jsonify({'error': '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è'}), 400
            
        # –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è email
        if '@' not in sender_email or '.' not in sender_email.split('@')[1]:
            return jsonify({'error': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email'}), 400
            
        if len(message) < 10:
            return jsonify({'error': '–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ'}), 400
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
        success = send_email_via_yandex(sender_email, subject, message)
        
        if success:
            return jsonify({
                'success': True,
                'message': '–ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
                'timestamp': datetime.now().isoformat()
            })
        else:
            return jsonify({'error': '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞'}), 500
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return jsonify({'error': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}), 500

@app.route('/health', methods=['GET'])
def health_check():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
    """
    return jsonify({
        'status': 'ok',
        'service': 'Yandex Email Server',
        'version': '1.0',
        'sender': SENDER_EMAIL,
        'recipient': RECIPIENT_EMAIL,
        'timestamp': datetime.now().isoformat()
    })

@app.route('/test-email', methods=['POST'])
def test_email():
    """
    –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    """
    try:
        success = send_email_via_yandex(
            'test@anonimka.online',
            '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç Yandex —Å–µ—Ä–≤–µ—Ä–∞',
            '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –Ω–æ–≤–æ–≥–æ email —Å–µ—Ä–≤–µ—Ä–∞ —Å Yandex SMTP.\n\n–í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ! üéâ'
        )
        
        if success:
            return jsonify({
                'success': True,
                'message': '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
                'timestamp': datetime.now().isoformat()
            })
        else:
            return jsonify({'error': '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞'}), 500
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ Yandex Email Server –¥–ª—è anonimka.online")
    print(f"üìß –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {SENDER_EMAIL}")
    print(f"üì¨ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {RECIPIENT_EMAIL}")
    print(f"üåê –°–µ—Ä–≤–µ—Ä: http://localhost:5000")
    print("üì° Endpoints:")
    print("   POST /send-email - –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞")
    print("   GET /health - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏")
    print("   POST /test-email - —Ç–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞")
    
    app.run(debug=True, host='0.0.0.0', port=5000)