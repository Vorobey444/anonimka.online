const nodemailer = require('nodemailer');

exports.handler = async (event, context) => {
  // –†–∞–∑—Ä–µ—à–∞–µ–º CORS
  const headers = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Access-Control-Allow-Methods': 'POST, OPTIONS'
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight –∑–∞–ø—Ä–æ—Å–∞
  if (event.httpMethod === 'OPTIONS') {
    return {
      statusCode: 200,
      headers,
      body: 'OK'
    };
  }

  // –¢–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã
  if (event.httpMethod !== 'POST') {
    return {
      statusCode: 405,
      headers,
      body: JSON.stringify({ error: 'Method not allowed' })
    };
  }

  try {
    const data = JSON.parse(event.body);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!data.senderEmail || !data.message) {
      return {
        statusCode: 400,
        headers,
        body: JSON.stringify({ error: 'Missing required fields' })
      };
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SMTP —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    const transporter = nodemailer.createTransporter({
      host: 'smtp.yandex.ru',
      port: 587,
      secure: false, // TLS
      auth: {
        user: 'wish.online@yandex.kz',
        pass: process.env.YANDEX_APP_PASSWORD || 'aitmytqacblwvpjc'
      }
    });

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø–∏—Å—å–º–∞
    const mailOptions = {
      from: 'Anonimka.Online <wish.online@yandex.kz>',
      to: 'vorobey469@yandex.ru',
      replyTo: data.senderEmail,
      subject: data.subject || '–°–æ–æ–±—â–µ–Ω–∏–µ —Å anonimka.online',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 10px 10px 0 0; }
                .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
                .message { background: white; padding: 20px; border-radius: 8px; border-left: 4px solid #667eea; }
                .info { color: #666; font-size: 14px; margin-bottom: 20px; }
                .footer { text-align: center; color: #999; font-size: 12px; margin-top: 30px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h2>üåü –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å anonimka.online</h2>
                </div>
                <div class="content">
                    <div class="info">
                        <strong>–û—Ç:</strong> ${data.senderEmail}<br>
                        <strong>–¢–µ–º–∞:</strong> ${data.subject || '–°–æ–æ–±—â–µ–Ω–∏–µ —Å anonimka.online'}<br>
                        <strong>–í—Ä–µ–º—è:</strong> ${new Date().toLocaleString('ru-RU')}<br>
                    </div>
                    <div class="message">
                        <strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong><br><br>
                        ${data.message.replace(/\n/g, '<br>')}
                    </div>
                    <div class="footer">
                        –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ <strong>anonimka.online</strong><br>
                        –î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥—Ä–µ—Å: <strong>${data.senderEmail}</strong>
                    </div>
                </div>
            </div>
        </body>
        </html>
      `,
      text: `
        –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ anonimka.online
        
        –û—Ç: ${data.senderEmail}
        –¢–µ–º–∞: ${data.subject || '–°–æ–æ–±—â–µ–Ω–∏–µ —Å anonimka.online'}
        –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
        
        –°–æ–æ–±—â–µ–Ω–∏–µ:
        ${data.message}
        
        ---
        –≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ anonimka.online
        –î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥—Ä–µ—Å: ${data.senderEmail}
      `
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    await transporter.sendMail(mailOptions);

    return {
      statusCode: 200,
      headers,
      body: JSON.stringify({ 
        success: true, 
        message: '–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –≤–∞—à–µ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–¥—Ä–µ—Å–∞!' 
      })
    };

  } catch (error) {
    console.error('Email error:', error);
    
    return {
      statusCode: 500,
      headers,
      body: JSON.stringify({ 
        error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞',
        details: error.message 
      })
    };
  }
};